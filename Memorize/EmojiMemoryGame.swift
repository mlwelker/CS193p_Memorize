// VIEWMODEL

import SwiftUI


class EmojiMemoryGame: ObservableObject {
    private static let emojis: [String] = ["üëª", "üéÉ", "üï∑Ô∏è", "üòà","üíÄ","üï∏Ô∏è","üßô‚Äç‚ôÄÔ∏è","üôÄ", "üëπ", "üò±", "‚ò†Ô∏è", "üç≠"]
    
    private static let halloweenTheme = CardTheme(
        name: "Halloween",
        color: .orange,
        emojis: ["üëª", "üéÉ", "üï∑Ô∏è", "üòà", "üíÄ", "üï∏Ô∏è", "üßô‚Äç‚ôÄÔ∏è", "üôÄ", "üëπ", "üò±", "‚ò†Ô∏è", "üç≠"],
        imageName: "theatermasks.circle.fill",
        numberOfPairs: 4
    )
    
    private static let faceTheme = CardTheme(
        name: "Faces",
        color: .green,
        emojis: ["ü•≥", "üòµ‚Äçüí´", "üòà", "üòé", "üòÖ", "üôÄ", "üò±", "üòá", "üòç"],
        imageName: "face.smiling.inverse",
        numberOfPairs: 4
    )
    
    private static let vehicleTheme = CardTheme(
        name: "Vehicles",
        color: .blue,
        emojis: ["üöó", "üöô", "üöõ", "üöû","‚úàÔ∏è","üöã","üöï", "üöì", "üèçÔ∏è", "üõµ", "üö≤"],
        imageName: "car.circle.fill",
        numberOfPairs: 10
    )
    
    private static let animalFacesTheme = CardTheme(
        name: "Animal Faces",
        color: .red,
        emojis: ["üê∏", "üê±", "üê∂", "üê∞", "üêπ", "üêª", "üê®", "ü¶ä", "üê∑", "üêØ"],
        imageName: "placeholdertext.fill",
        numberOfPairs: 10
    )
    
    private static let animalsTheme = CardTheme(
        name: "Animals",
        color: .purple,
        emojis: ["üêà", "üêï", "üêøÔ∏è", "ü¶î", "ü¶ù", "üêñ", "üêç", "ü¶é", "üêù", "üêÖ", "üêò"],
        imageName: "placeholdertext.fill",
        numberOfPairs: 10
    )
    
    private static let foodTheme = CardTheme(
        name: "Food",
        color: .yellow,
        emojis: ["üçï", "üçî", "üå≠", "üåÆ", "üåØ", "ü•ô", "ü•ó", "ü•™", "üç±", "üçù", "üçõ", "üçø"],
        imageName: "food.circle.fill",
        numberOfPairs: 12
    )
    
    private static func createMemoryGame() -> MemoryGame<String> {
        MemoryGame(numberOfPairsOfCards: 12) { pairIndex in
            if emojis.indices.contains(pairIndex) {
                return emojis[pairIndex]
            } else {
                return "‚ÅâÔ∏è"
            }
        }
    }
    
    @Published private var model = createMemoryGame()
    
    var cards: Array<MemoryGame<String>.Card> {
        return model.cards
    }
    
    // MARK: - Intents
    
    func newGame() {
        model = EmojiMemoryGame.createMemoryGame()
        shuffle()
    }
    
    func shuffle() {
        model.shuffle()
    }
    
    func choose(_ card: MemoryGame<String>.Card) {
        model.choose(card)
    }
}

struct CardTheme {
    let name: String
    let color: Color
    let emojis: Array<String>
    let imageName: String
    let numberOfPairs: Int
}
